{"version":3,"sources":["services/firebaseService.js","services/authService.js","features/auth/SignIn.js","features/RecordsManager/components/CoreField.js","features/RecordsManager/components/CoreForm.js","features/RecordsManager/components/CoreList.js","features/RecordsManager/RecordsManager.js","features/AppHeader/AppHeader.js","features/AppHome/AppHome.js","features/YachtsManager/definition.js","features/YachtsManager/YactsManager.js","features/Admin/Admin.js","features/auth/PublicRoute.js","features/auth/PrivateRoute.js","App.js","serviceWorker.js","index.js"],"names":["tableName","apiKey","authService","webApiKey","signIn","user","a","axios","post","returnSecureToken","fbuser","signUp","useStyles","makeStyles","theme","formContainer","display","height","width","flexDirection","justifyContent","alignItems","margin","actionsContainer","SignIn","onSignedIn","useState","email","password","setUser","classes","history","useHistory","handleSignIn","push","data","Fragment","Card","className","CardContent","Grid","container","spacing","item","AlternateEmail","TextField","value","label","onChange","target","u","LockOutlined","type","CardActions","Button","color","onClick","variant","firebaseService","fbTable","projId","importFrom","url","get","importedRecords","createRecord","record","localId","idToken","fbCustomer","updateRecord","recordId","put","id","deleteRecord","delete","deleteTable","getRecord","getRecords","limit","result","CoreField","field","mode","onBlur","includes","xs","fullWidth","name","autoFocus","disabled","isReadOnly","component","multiline","rowsMax","InputLabelProps","shrink","FormControlLabel","control","Switch","checked","cardTitle","textAlign","fontSize","backgroundColor","padding","actionsContainerTopMain","actionsContainerTopButtons","CoreForm","fbUser","definition","initialInputRecord","onAdded","onUpdated","onDeleted","onCancelled","svc","toLowerCase","title","initialValues","onSubmit","values","setSubmitting","newRecord","fields","forEach","f","firebaseId","handleChange","errors","touched","handleBlur","handleSubmit","isSubmitting","raised","CardHeader","subheader","action","map","key","startIcon","tableIcons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","toolbarContainer","importButton","alignSelf","textTransform","importUrlField","importChip","boxShadow","borderRadius","isTermnInRow","term","rowData","Object","join","replace","CoreList","records","onAdd","onDelete","onUpdate","onImport","importMessage","onImportUrlChange","summaryColumns","_","filter","summary","sortedSummaryColumns","orderBy","r","customFilterAndSearch","enableImport","icons","pluralName","columns","actions","icon","tooltip","isFreeAction","event","iconProps","style","options","actionsColumnIndex","localization","body","emptyDataSourceMessage","RecordsManager","setImportMessage","importUrl","setImportUrl","setRecords","processed","toUpperCase","substring","pluralize","sqlFields","split","sf","fieldParts","existingDefinitionRecord","find","defaultValue","readonly","some","s","autofocus","normalizeDefinition","initialRecords","element","selectedRecord","setSelectedRecord","setMode","useEffect","length","objectKeys","keys","mappedRecords","k","handleOnImport","importRecords","setTimeout","newImport","ik","normalizedKey","matchingKey","Date","toISOString","message","deletedRecord","remainingRecords","x","updatedRecord","updatedRecords","c","links","flexGrow","link","textDecoration","AppHeader","onSignout","AppBar","position","Toolbar","IconButton","edge","aria-label","to","Typography","mainContainer","AppHome","fbSrvc","Container","Paper","elevation","YachtsManager","Admin","onEnableImport","PublicRoute","Component","restricted","rest","render","idToekn","PrivateRoute","App","User","appState","setAppState","handleOnSignedIn","handleOnEnableImport","newState","exact","path","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.546cccf5.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst firebaseProj = 'yachts-1baaa';\nlet tableName;\n\nconst firebaseService = (fbTable) => {\n    tableName = fbTable;\n    return {\n        projId: firebaseProj,\n        importFrom: async (url) => {\n            const importedRecords = await axios.get(url);\n            return importedRecords;\n        },\n        createRecord: async (user, record) => {\n            const fbCustomer = await axios.post(`https://${firebaseProj}.firebaseio.com/${user.localId}/${tableName}.json?auth=${user.idToken}`, record);\n            return fbCustomer;\n        },\n        updateRecord: async (user, recordId, record) => {\n            await axios.put(`https://${firebaseProj}.firebaseio.com/${user.localId}/${tableName}/${recordId}.json?auth=${user.idToken}`, record);\n            return { ...record, id: recordId };\n        },\n        deleteRecord: async (user, recordId, record) => {\n            await axios.delete(`https://${firebaseProj}.firebaseio.com/${user.localId}/${tableName}/${recordId}.json?auth=${user.idToken}`);\n            return { ...record, id: recordId };\n        },\n        deleteTable: async (user) => {\n            await axios.delete(`https://${firebaseProj}.firebaseio.com/${user.localId}/${tableName}.json?auth=${user.idToken}`);\n        },\n        getRecord: async (user, recordId) => {\n            const fbCustomer = await axios.get(`https://${firebaseProj}.firebaseio.com/${user.localId}/${tableName}/${recordId}.json?auth=${user.idToken}`);\n            return fbCustomer;\n        },\n        getRecords: async (user, limit) => { // TODO: implement limit on number of records returned \n            const result = await axios.get(`https://${firebaseProj}.firebaseio.com/${user.localId}/${tableName}.json?auth=${user.idToken}`);\n            return result;\n        }\n    }\n}\n\n\nexport default firebaseService;\n","import axios from 'axios';\nconst apiKey = 'AIzaSyDO8jhD5kAOCtGONcvjmAnvdGwPjpR8GyY';\nconst authService = {\n    webApiKey: apiKey,\n    signIn: async function signInService(user) {\n\n        const fbuser = await axios.post(`https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${apiKey}`, { ...user, returnSecureToken: true });\n        return fbuser;\n    },\n    signUp: async function signUpService(user) {\n\n        const fbuser = await axios.post(`https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${apiKey}`, { ...user, returnSecureToken: true });\n        return fbuser;\n    }\n\n};\n\nexport default authService;","import React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport authService from '../../services/authService';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AlternateEmail, LockOutlined } from '@material-ui/icons';\nimport { useHistory } from 'react-router-dom';\nimport { CardContent, CardActions } from '@material-ui/core';\n\n// TODO: https://github.com/mui-org/material-ui/blob/master/docs/src/pages/getting-started/templates/sign-in/SignIn.js\n// TODO: use formik https://www.youtube.com/watch?v=TxEVnaISj1w\nconst useStyles = makeStyles((theme) => ({\n    formContainer: {\n        display: 'flex',\n        height: '30vh',\n        width: '30%',\n        flexDirection: 'column',\n        justifyContent: 'space-around',\n        alignItems: 'center',\n        margin: '20px auto',\n    },\n    actionsContainer: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n    }\n}));\n\nconst SignIn = ({ onSignedIn }) => {\n    const [user, setUser] = useState({ email: \"\", password: \"\" });\n    const classes = useStyles();\n    const history = useHistory();\n\n    const handleEmailChange = ({ target }) => {\n        setUser(u => u = { ...u, email: target.value });\n    }\n\n    const handlePasswordChange = ({ target }) => {\n        setUser(u => u = { ...u, password: target.value });\n    }\n\n    const handleSignIn = async () => {\n        const fbuser = await authService.signIn(user);\n        history.push('/');\n        onSignedIn(fbuser.data);\n    }\n\n    return (\n        <React.Fragment>\n            <Card className={classes.formContainer}>\n                <form>\n                    <CardContent>\n                        <Grid container spacing={1} alignItems=\"flex-end\">\n                            <Grid item>\n                                <AlternateEmail />\n                            </Grid>\n                            <Grid item>\n                                <TextField value={user.email} label=\"Email Address\" onChange={handleEmailChange} />\n                            </Grid>\n                        </Grid>\n\n                        <Grid container spacing={1} alignItems=\"flex-end\">\n                            <Grid item>\n                                <LockOutlined />\n                            </Grid>\n                            <Grid item>\n                                <TextField value={user.password} type=\"password\" label=\"Password\" onChange={handlePasswordChange} />\n                            </Grid>\n                        </Grid>\n\n                    </CardContent>\n\n                    <CardActions className={classes.actionsContainer}>\n                        <Button color='secondary' onClick={() => setUser({ email: \"\", password: \"\" })}> Reset </Button>\n                        <Button variant=\"contained\" color='primary' onClick={handleSignIn}> Login </Button>\n                    </CardActions>\n                </form>\n            </Card>\n        </React.Fragment>\n\n    )\n}\n\nexport default SignIn;","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport { ErrorMessage } from 'formik';\n\nconst CoreField = ({ field, mode, onChange, onBlur, value }) => {\n\n\n    return (\n        <React.Fragment>\n            {((['text', 'tel', 'email'].includes(field.type)) &&\n                <Grid item xs={4}>\n                    <TextField\n                        fullWidth\n                        type={field.type}\n                        name={field.name}\n                        label={field.label}\n                        autoFocus={field.autoFocus}\n                        disabled={mode === 2 || (field.isReadOnly)}\n                        onChange={onChange}\n                        onBlur={onBlur}\n                        value={value}\n                    />\n                    <ErrorMessage name={field.name} component=\"div\" />\n                </Grid>)}\n            {((['textarea'].includes(field.type)) &&\n                <Grid item xs={4}>\n                    <TextField\n                        fullWidth\n                        type={field.type}\n                        name={field.name}\n                        label={field.label}\n                        multiline\n                        rowsMax={4}\n                        autoFocus={field.autoFocus}\n                        disabled={mode === 2 || (field.isReadOnly)}\n                        onChange={onChange}\n                        onBlur={onBlur}\n                        value={value}\n                    />\n                    <ErrorMessage name={field.name} component=\"div\" />\n                </Grid>)}\n\n            {((['number'].includes(field.type)) &&\n                <Grid item xs={4}>\n                    <TextField\n                        type={field.type}\n                        name={field.name}\n                        label={field.label}\n                        autoFocus={field.autoFocus}\n                        disabled={mode === 2 || (field.isReadOnly)}\n                        onChange={onChange}\n                        onBlur={onBlur}\n                        value={value}\n                    />\n                    <ErrorMessage name={field.name} component=\"div\" />\n                </Grid>)}\n\n            {((['date'].includes(field.type)) &&\n                <Grid item xs={4}>\n                    <TextField\n                        type={field.type}\n                        name={field.name}\n                        label={field.label}\n                        autoFocus={field.autoFocus}\n                        disabled={mode === 2 || (field.isReadOnly)}\n                        onChange={onChange}\n                        onBlur={onBlur}\n                        value={value}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <ErrorMessage name={field.name} component=\"div\" />\n                </Grid>)}\n\n            {((['checkbox'].includes(field.type)) &&\n                <Grid item xs={4}>\n                    <FormControlLabel\n                        control={\n                            <Switch\n                                checked={value}\n                                onChange={onChange}\n                                name={field.name}\n                                color=\"primary\"\n                                disabled={mode === 2 || (field.isReadOnly)}\n                            />\n                        }\n                        label={field.label}\n                    />\n                    <ErrorMessage name={field.name} component=\"div\" />\n                </Grid>)}\n        </React.Fragment>\n\n    )\n}\n\nexport default CoreField;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport firebaseService from '../../../services/firebaseService';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Formik } from 'formik';\nimport Grid from '@material-ui/core/Grid';\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\nimport SaveOutlinedIcon from '@material-ui/icons/SaveOutlined';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport CancelOutlinedIcon from '@material-ui/icons/CancelOutlined';\nimport AddOutlinedIcon from '@material-ui/icons/AddOutlined';\nimport CoreField from './CoreField';\n\nconst useStyles = makeStyles((theme) => ({\n    formContainer: {\n        width: '90%',\n        margin: '25px auto',\n    },\n    cardTitle: {\n        textAlign: 'left',\n        fontSize: '2em',\n        backgroundColor: 'silver',\n    },\n    actionsContainer: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n        alignItems: 'center',\n        padding: '10px',\n        backgroundColor: 'silver',\n    },\n    actionsContainerTopMain: {\n        width: '50%',\n        padding: '10px',\n    },\n    actionsContainerTopButtons: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n    }\n}));\n\nconst CoreForm = ({ fbUser, mode, definition, initialInputRecord, onAdded, onUpdated, onDeleted, onCancelled }) => {\n\n    const classes = useStyles();\n    const svc = firebaseService(definition.name.toLowerCase());\n    const title = (mode) => {\n        switch (mode) {\n            case 1:\n                return 'Create ' + definition.name;\n            case 2:\n                return 'Delete ' + definition.name;\n            case 3:\n                return 'Update ' + definition.name;\n            default:\n                break;\n        }\n    }\n    return (\n        <React.Fragment>\n            <Formik\n                initialValues={initialInputRecord}\n                onSubmit={async (values, { setSubmitting }) => {\n                    const newRecord = {};\n                    definition.fields.forEach(f => newRecord[f.name] = values[f.name]);\n                    if (mode === 1) {\n                        const result = await svc.createRecord(fbUser, newRecord);\n                        onAdded({ ...values, firebaseId: result.data.name });\n                    } else if (mode === 2) {\n                        await svc.deleteRecord(fbUser, initialInputRecord.firebaseId, newRecord);\n                        onDeleted(values);\n                    } else if (mode === 3) {\n                        await svc.updateRecord(fbUser, initialInputRecord.firebaseId, newRecord);\n                        onUpdated(values);\n                    }\n                    setSubmitting(false);\n                }}\n            >\n                {({\n                    values,\n                    errors,\n                    touched,\n                    handleChange,\n                    handleBlur,\n                    handleSubmit,\n                    isSubmitting,\n                    /* and other goodies */\n                }) => (\n                        <form onSubmit={handleSubmit} >\n                            <Card raised className={classes.formContainer}>\n                                <CardHeader className={classes.cardTitle}\n                                    title={title(mode)}\n                                    subheader={`${values.firebaseId}`}\n                                    action={\n                                        <CancelOutlinedIcon color='secondary' onClick={onCancelled} />\n                                    }\n                                />\n                                <CardContent>\n                                    <Grid container  spacing={3}>\n                                        {definition.fields.map(f => <CoreField key={f.name} field={f} value={values[f.name]} mode={mode} onChange={handleChange} onBlur={handleBlur}/>)}\n                                    </Grid>\n\n                                </CardContent>\n                                <CardActions className={classes.actionsContainer}>\n\n                                    <Button type=\"button\" disabled={isSubmitting} variant=\"contained\" color='secondary' onClick={onCancelled} startIcon={<CancelOutlinedIcon />}>Cancel</Button>\n                                    {(mode === 1) && <Button type=\"submit\" disabled={isSubmitting} variant=\"contained\" color='primary' startIcon={<AddOutlinedIcon />}>Create</Button>}\n                                    {(mode === 2) && <Button type=\"submit\" disabled={isSubmitting} variant=\"contained\" color='secondary' startIcon={<DeleteOutlinedIcon />}>Delete</Button>}\n                                    {(mode === 3) && <Button type=\"submit\" disabled={isSubmitting} variant=\"contained\" color='primary' startIcon={<SaveOutlinedIcon />}>Save</Button>}\n                                </CardActions>\n                            </Card>\n                        </form>\n                    )}\n\n            </Formik>\n        </React.Fragment>\n    )\n}\n\nexport default CoreForm;","import React from 'react'\nimport { forwardRef } from 'react';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport { Button, TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MaterialTable from 'material-table';\nimport _ from 'lodash';\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\nconst useStyles = makeStyles((theme) => ({\n  toolbarContainer: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '10px',\n  },\n  importButton: {\n    alignSelf: 'stretch',\n    textTransform: 'none',\n  },\n  importUrlField: {\n    width: '30%',\n  },\n  importChip: {\n    width: '30%',\n    backgroundColor: 'Teal',\n    boxShadow: '2px 2px silver',\n    padding: '10px',\n    color: 'white',\n    borderRadius: '16px',\n    fontSize: '0.8em',\n    textAlign: 'center'\n  }\n}));\n\n\nconst isTermnInRow = (term, rowData) => {\n\n  return term && rowData && Object.values(rowData).join('').replace(/[\\n ,-]/g, '').toLowerCase().includes(term.toLowerCase());\n\n}\n\nconst CoreList = ({ definition, fbUser, records, onAdd, onDelete, onUpdate, onImport, importMessage, onImportUrlChange }) => {\n  const summaryColumns = _.filter(definition.fields, (f) => !!f.summary);\n  const sortedSummaryColumns = _.orderBy(summaryColumns, ['summary', ['asc']]).map(r => { return { title: r.label, field: r.name, customFilterAndSearch: (term, rowData) => isTermnInRow(term, rowData) } });\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n\n      <div>{isTermnInRow('', records[0])}</div>\n\n      {(importMessage || fbUser.enableImport) &&\n        <div className={classes.toolbarContainer}>\n          <TextField className={classes.importUrlField} onChange={onImportUrlChange} label=\"Import url\"></TextField>\n          <div className={classes.importChip} > {importMessage} </div>\n          <Button onClick={onImport} color='secondary' className={classes.importButton}>Import</Button>\n        </div>\n      }\n      <MaterialTable icons={tableIcons}\n        title={definition.pluralName}\n        columns={sortedSummaryColumns}\n        data={records}\n        actions={[\n          {\n            icon: tableIcons.Add,\n            tooltip: 'Add ' + definition.name,\n            isFreeAction: true,\n            onClick: (event) => onAdd()\n          },\n          {\n            icon: tableIcons.Edit,\n            tooltip: 'Edit ' + definition.name,\n            onClick: (event, rowData) => {\n              onUpdate(rowData);\n            }\n          },\n          {\n            icon: tableIcons.Delete,\n            tooltip: 'Delete ' + definition.name,\n            iconProps: {\n              style: 'color: \"red\"',\n            },\n            onClick: (event, rowData) => {\n              onDelete(rowData);\n            }\n          }\n        ]}\n        options={{\n          actionsColumnIndex: -1,\n        }}\n        localization={{\n          body: {\n            emptyDataSourceMessage: `No ${definition.name}s to display, import or add ${definition.name}s by clicking the plus sign above.`,\n          },\n        }}\n      />\n    </React.Fragment>\n  );\n}\n\nexport default CoreList;","import React, { useState, useEffect } from 'react';\nimport CoreForm from './components/CoreForm';\nimport CoreList from './components/CoreList';\nimport pluralize from 'pluralize'\nimport firebaseService from '../../services/firebaseService';\nimport _ from 'lodash';\n\nconst RecordsManager = ({ fbUser, definition }) => {\n    const [importMessage, setImportMessage] = useState('');\n    const [importUrl, setImportUrl] = useState('');\n    const [records, setRecords] = useState([]);\n    definition = normalizeDefinition(definition);\n    const initialRecords = {};\n    definition.fields.forEach(element => {\n        initialRecords[element.name] = element.defaultValue;\n    });\n    const [selectedRecord, setSelectedRecord] = useState(initialRecords);\n    const [mode, setMode] = useState(0);\n    const svc = firebaseService(definition.name.toLowerCase());\n    useEffect(() => {\n        async function getRecords() {\n            if (records.length === 0) {\n                const result = await svc.getRecords(fbUser);\n                if (result && result.data) {\n                    const objectKeys = Object.keys(result.data);\n                    const mappedRecords = objectKeys.map(k => { return { ...result.data[k], firebaseId: k } });\n                    setRecords(mappedRecords);\n                    setMode(0);\n                } else {\n                    setImportMessage('Enter service Url, then press Import to import up to 5000 records');\n                }\n            }\n        }\n        getRecords();\n    }, [fbUser, svc, definition, records]);\n\n    const handleOnAdded = (newRecord) => {\n        setRecords([...records, newRecord]);\n        setMode(0)\n    };\n    const handleOnUpdated = (updatedRecord) => {\n        const updatedRecords = records.map(c => c.firebaseId === updatedRecord.firebaseId ? updatedRecord : c);\n        setRecords(updatedRecords);\n        setMode(0)\n    };\n    const handleOnDeleted = (deletedRecord) => {\n        const remainingRecords = records.filter(x => x.firebaseId !== deletedRecord.firebaseId);\n        setRecords(remainingRecords);\n        setMode(0)\n    };\n    const handleOnCancelled = () => {\n        setMode(0)\n    };\n    const handleOnAdd = () => {\n        setSelectedRecord(initialRecords);\n        setMode(1);\n    };\n    const handleOnDelete = (deleteRecord) => {\n        setSelectedRecord(deleteRecord)\n        setMode(2);\n    };\n    const handleOnUpdate = (updateRecord) => {\n        setSelectedRecord(updateRecord)\n        setMode(3);\n    };\n    const handleOnImport = async () => {\n        try {\n            if (!importUrl) {\n                setImportMessage('Please enter import url...');\n                return;\n            }\n            const importRecords = await (await svc.importFrom(importUrl)).data;\n            setImportMessage(`Found ${importRecords.length} ${definition.name} records. Importing...`);\n            importRecords.forEach(r => {\n                setTimeout(() => {\n                    const newImport = {};\n                    const importedKeys = Object.keys(r);\n                    importedKeys.forEach(ik => {\n                        const normalizedKey = ik.replace('_', '').toLowerCase();\n                        //Find this normalizedKey in the definition\n                        const matchingKey = _.find(definition.fields, (f) => f.name.toLowerCase() === normalizedKey);\n                        if (matchingKey && matchingKey.name) {\n                            if (matchingKey.type === 'date') {\n                                newImport[matchingKey.name] = (new Date(r[ik]).toISOString().substring(0,10));\n                            } else {\n                                newImport[matchingKey.name] = r[ik];\n                            }\n                        }\n                    })\n                    svc.createRecord(fbUser, newImport);\n                    setImportMessage(`Importing ${definition.name} record# ${newImport[definition.fields[0].name]}`)\n                    setRecords([...records, newImport]);\n                }, 2000)\n            });\n        } catch (err) {\n            setImportMessage(err.message);\n        }\n    };\n    const handleImportUrlChange = (event) => {\n        setImportUrl(event.target.value);\n    }\n    return (\n        <React.Fragment>\n            {\n                mode === 0 ? <CoreList definition={definition} fbUser={fbUser} records={records} onAdd={handleOnAdd} onDelete={handleOnDelete} onUpdate={handleOnUpdate} onImport={handleOnImport} importMessage={importMessage} onImportUrlChange={handleImportUrlChange}></CoreList> :\n                    <CoreForm mode={mode} definition={definition} initialInputRecord={selectedRecord} fbUser={fbUser} onAdded={handleOnAdded} onDeleted={handleOnDeleted} onUpdated={handleOnUpdated} onCancelled={handleOnCancelled}></CoreForm>\n            }\n\n        </React.Fragment >\n    )\n}\n\nfunction normalizeDefinition(definition) {\n    if (definition.processed) return definition;\n    definition.name = definition.name[0].toUpperCase() + definition.name.toLowerCase().substring(1);\n    definition.pluralName = pluralize(definition.name);\n    if (definition.sqlFields) {\n        if (!definition.fields) definition.fields = [];\n        const fields = definition.sqlFields.split('\\n');\n        fields.forEach(sf => {\n            const fieldParts = sf.replace(/ /g, '').split('\\t');\n            const name = fieldParts[0][0].toLowerCase() + fieldParts[0].substring(1);\n            const label = fieldParts[0];\n            let type = '';\n            if (fieldParts[1].includes('char')) {\n                type = 'text';\n            } else if (fieldParts[1].includes('bit')) {\n                type = 'checkbox';\n            } else if (fieldParts[1].includes('datetime')) {\n                type = 'date';\n            } else if (fieldParts[1].includes('int')) {\n                type = 'number';\n            } else if (fieldParts[1].includes('money')) {\n                type = 'number';\n            } else if (fieldParts[1].includes('decimal')) {\n                type = 'number';\n            }\n\n            const existingDefinitionRecord = _.find(definition.fields, (f) => f.name === fieldParts[0]);\n            if (existingDefinitionRecord) {\n                existingDefinitionRecord.label = label;\n                existingDefinitionRecord.type = type;\n                existingDefinitionRecord.name = name;\n            } else {\n                definition.fields.push({\n                    name,\n                    label,\n                    type\n                })\n            }\n\n        });\n    }\n\n    definition.fields = definition.fields.map(f => {\n        const label = (f.label || (f.name[0].toUpperCase() + f.name.substring(1)));\n        const type = (f.type || 'text');\n        const summary = f.summary || 0;\n        const defaultValue = f.defaultValue || '';\n        const readonly = f.readonly || false;\n        return {\n            ...f,\n            label,\n            type,\n            summary,\n            readonly,\n            defaultValue,\n        };\n    });\n\n    if (!definition.fields.some(s => s.summary)) {\n        definition.fields[0].summary = 1;\n    }\n    if (!definition.fields.some(s => s.autofocus)) {\n        definition.fields[0].autofocus = true;\n    }\n    definition.processed = true;\n    return definition;\n}\n\nexport default RecordsManager;","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n    links: {\n        flexGrow: 1,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-around',\n    },\n    link: {\n        color: 'white',\n        textDecoration: 'none'\n    }\n}));\n\nconst AppHeader = ({ fbUser, onSignout }) => {\n    const classes = useStyles();\n    return (\n        <AppBar position=\"static\">\n            <Toolbar>\n                <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n                    <MenuIcon />\n                </IconButton>\n                <div className={classes.links}>\n                    {(fbUser && fbUser.idToken) && <Link to=\"/yachts\" className={classes.link}><Typography variant=\"button\">Yachts</Typography></Link>}\n                </div>\n                {\n                    (!fbUser || !fbUser.idToken) && <Link to=\"/signin\" className={classes.link}><Typography variant=\"button\">Login</Typography></Link>\n                }\n                {\n                    (fbUser && fbUser.idToken) && <Button className={classes.link} onClick={onSignout}><Typography variant=\"button\">Logout</Typography></Button>\n                }\n\n            </Toolbar>\n        </AppBar>\n    )\n}\n\nexport default AppHeader;","import React from 'react';\nimport { Container, Paper, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport authService from '../../services/authService'\nimport firebaseService  from '../../services/firebaseService'\n\nconst useStyles = makeStyles((theme) => ({\n    mainContainer: {\n        width: '80%',\n        height: '50vh',\n        margin: '30px auto',\n        display: 'flex',\n        justifyContent: 'space-around',\n        alignItems: 'center',\n    },\n    message: {\n        width: '100%',\n        height: '100%',\n        display: 'flex',\n        justifyContent: 'space-around',\n        alignItems: 'center',\n    }\n\n}));\n\nconst AppHome = ({ fbUser }) => {\n    const classes = useStyles();\n    const fbSrvc = firebaseService();\n    return (\n        <Container className={classes.mainContainer}>\n            <Paper elevation={5} className={classes.message}>\n                {\n                    (!fbUser.idToken) && <Typography>Welcome to Keepy! Web API Key {authService.webApiKey}, ProjId: {fbSrvc.projId}</Typography>\n                }\n                {\n                    (fbUser.idToken) && <Typography color='primary'>{`Welcome, ${fbUser.localId} [aka: ${fbUser.email}]`}</Typography>\n                }\n            </Paper>\n        </Container>\n    )\n};\n\nexport default AppHome;","const definition = {\n  name: 'yAcht',\n  fields: [\n    { name: 'newname', label: 'New name' , summary: 1 },\n    { name: 'oldname', label: 'Old name', summary: 2 },\n    { name: 'newreg', label: 'New Registration', summary: 3 },\n    { name: 'builder', label: 'Build', summary: 4 },\n    { name: 'hull', label: 'HIN #',  summary: 5 },\n    { name: 'owner', label: 'Owner', summary: 6},\n    { name: 'corp', label: 'Corp/LLC', summary: 7 },\n    { name: 'cin', label: 'CIN #'},\n    { name: 'sellingbroker', label: 'Selling broker' },\n    { name: 'brokeragehouse', label: 'Brokerage house' },\n    { name: 'length'},\n    { name: 'beam' },\n    { name: 'depth' },\n    { name: 'dinghyreg', label: 'Old Registration' },\n    { name: 'flag' },\n    { name: 'hailingport', label: 'Hailing Port' },\n    { name: 'oldreg', label: 'Tender Make' },\n    { name: 'tender' , label: 'Tender Registration'},\n    { name: 'hin' , label: 'Tender HIN #'},\n    { name: 'documentation', type : 'textarea' , label: 'Doc Address'},\n    { name: 'mailing', label: 'Mail Address' },\n    { name: 'email'},\n    { name: 'phone', type: 'tel' },\n    { name: 'lienholder', label: 'Lien Holder' },\n    { name: 'lien' , label: 'Lien Amount'},\n    { name: 'fileno', label: 'File No' },\n    { name: 'storage' },\n    { name: 'id', type: 'number' },\n    { name: 'notes', type: 'textarea' },\n  ]\n}\n\n\nexport default definition;","import React from 'react';\nimport definition from './definition';\nimport RecordsManager from '../RecordsManager/RecordsManager';\n\nconst YachtsManager = ({fbUser}) => {\n    return (\n        <RecordsManager fbUser={fbUser} definition={definition} />\n    )\n\n}\n\nexport default YachtsManager;","import React from 'react'\nimport Button from '@material-ui/core/Button';\nimport firebaseService from '../../services/firebaseService';\n\nconst Admin = ({ fbUser, onEnableImport }) => {\n\n    const svc = firebaseService('company');\n    const handleOnDeleteCustomers = () => {\n        svc.deleteTable(fbUser)\n    }\n\n    const handleOnEnableImport = ()=> {\n        onEnableImport();\n    }\n    return (\n        <React.Fragment>\n            <Button color='primary' onClick={handleOnDeleteCustomers}>\n                Delete Companies\n            </Button>\n            <Button color='primary' onClick={handleOnEnableImport}>\n                Enable Import\n            </Button>\n\n        </React.Fragment>\n    )\n}\n\nexport default Admin;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PublicRoute = ({component: Component, fbUser, restricted, ...rest}) => {\n    return (\n        <Route {...rest} render={props => (\n            fbUser && fbUser.idToekn && restricted ?\n                <Redirect to=\"/customers\" />\n            : <Component {...props} />\n        )} />\n    );\n};\n\nexport default PublicRoute;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({component: Component, fbUser, ...rest}) => {\n    return (\n\n        <Route {...rest} render={props => (\n            fbUser && fbUser.idToken ?\n                <Component {...props} />\n            : <Redirect to=\"/signin\" />\n        )} />\n    );\n};\n\nexport default PrivateRoute;","import React, { useState } from 'react';\n// import SignUp from './features/auth/SignUp';\nimport SignIn from './features/auth/SignIn';\nimport CustomersManager from './features/Customers/CustomersManager';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport AppHeader from './features/AppHeader/AppHeader';\nimport ContactsManager from './features/Contacts/ContactsManager';\nimport AppHome  from './features/AppHome/AppHome';\nimport YachtsManager from './features/YachtsManager/YactsManager';\nimport Admin from './features/Admin/Admin'\nimport PublicRoute from './features/auth/PublicRoute';\nimport PrivateRoute from './features/auth/PrivateRoute';\n\nfunction App() {\n  const [appState, setAppState] = useState({ User: {} });\n  const handleOnSignedIn = (fbUser) => {\n    if (fbUser) {\n      setAppState(s => s = { ...appState, User: fbUser });\n    }\n  }\n  const handleOnSignedout = (fbUser) => {\n      setAppState({ User: {} });\n  }\n\n  const handleOnEnableImport = ()=> {\n    const newState = {...appState};\n    newState.User.enableImport = true;\n    setAppState(newState);\n  }\n\n  return (\n    <Router>\n      <AppHeader fbUser={appState.User} onSignout={handleOnSignedout}></AppHeader>\n      <PublicRoute exact path=\"/\" component={() => <AppHome fbUser={appState.User} />} fbUser={appState.User}></PublicRoute>\n      <PublicRoute restricted={true} exact path=\"/signin\" component={() => <SignIn onSignedIn={handleOnSignedIn} />} fbUser={appState.User}></PublicRoute>\n      <PrivateRoute exact path=\"/yachts\" component={() => <YachtsManager fbUser={appState.User} />} fbUser={appState.User}></PrivateRoute>\n      <PrivateRoute exact path=\"/admin\" component={() => <Admin fbUser={appState.User} onEnableImport={handleOnEnableImport} />} fbUser={appState.User}></PrivateRoute>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["services/firebaseService.js","services/authService.js","features/auth/SignIn.js","features/RecordsManager/components/CoreField.js","features/RecordsManager/components/CoreForm.js","features/RecordsManager/components/CoreList.js","features/RecordsManager/RecordsManager.js","features/AppHeader/AppHeader.js","features/AppHome/AppHome.js","features/YachtsManager/definition.js","features/YachtsManager/YactsManager.js","features/Admin/Admin.js","features/auth/PublicRoute.js","features/auth/PrivateRoute.js","App.js","serviceWorker.js","index.js"],"names":["tableName","apiKey","authService","webApiKey","signIn","user","a","axios","post","returnSecureToken","fbuser","signUp","useStyles","makeStyles","theme","formContainer","display","height","width","flexDirection","justifyContent","alignItems","margin","actionsContainer","SignIn","onSignedIn","useState","email","password","setUser","classes","history","useHistory","handleSignIn","push","data","Fragment","Card","className","CardContent","Grid","container","spacing","item","AlternateEmail","TextField","value","label","onChange","target","u","LockOutlined","type","CardActions","Button","color","onClick","variant","firebaseService","fbTable","projId","importFrom","url","get","importedRecords","createRecord","record","localId","idToken","fbCustomer","updateRecord","recordId","put","id","deleteRecord","delete","deleteTable","getRecord","getRecords","limit","result","CoreField","field","mode","onBlur","includes","xs","fullWidth","name","autoFocus","disabled","isReadOnly","component","multiline","rowsMax","InputLabelProps","shrink","FormControlLabel","control","Switch","checked","cardTitle","textAlign","fontSize","backgroundColor","padding","actionsContainerTopMain","actionsContainerTopButtons","CoreForm","fbUser","definition","initialInputRecord","onAdded","onUpdated","onDeleted","onCancelled","svc","toLowerCase","title","initialValues","onSubmit","values","setSubmitting","newRecord","fields","forEach","f","firebaseId","handleChange","errors","touched","handleBlur","handleSubmit","isSubmitting","raised","CardHeader","subheader","action","map","key","startIcon","tableIcons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","toolbarContainer","importButton","alignSelf","textTransform","importUrlField","importChip","boxShadow","borderRadius","CoreList","records","onAdd","onDelete","onUpdate","onImport","importMessage","onImportUrlChange","summaryColumns","_","filter","summary","sortedSummaryColumns","orderBy","r","enableImport","icons","pluralName","columns","actions","icon","tooltip","isFreeAction","event","rowData","iconProps","style","options","actionsColumnIndex","localization","body","emptyDataSourceMessage","RecordsManager","setImportMessage","importUrl","setImportUrl","setRecords","processed","toUpperCase","substring","pluralize","sqlFields","split","sf","fieldParts","replace","existingDefinitionRecord","find","defaultValue","readonly","some","s","autofocus","normalizeDefinition","initialRecords","element","selectedRecord","setSelectedRecord","setMode","useEffect","length","objectKeys","Object","keys","mappedRecords","k","handleOnImport","importRecords","setTimeout","newImport","ik","normalizedKey","matchingKey","Date","toISOString","message","deletedRecord","remainingRecords","x","updatedRecord","updatedRecords","c","links","flexGrow","link","textDecoration","AppHeader","onSignout","AppBar","position","Toolbar","IconButton","edge","aria-label","to","Typography","mainContainer","AppHome","fbSrvc","Container","Paper","elevation","YachtsManager","Admin","onEnableImport","PublicRoute","Component","restricted","rest","render","idToekn","PrivateRoute","App","User","appState","setAppState","handleOnSignedIn","handleOnEnableImport","newState","exact","path","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.c970034a.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst firebaseProj = 'yachts-1baaa';\r\nlet tableName;\r\n\r\nconst firebaseService = (fbTable) => {\r\n    tableName = fbTable;\r\n    return {\r\n        projId: firebaseProj,\r\n        importFrom: async (url) => {\r\n            const importedRecords = await axios.get(url);\r\n            return importedRecords;\r\n        },\r\n        createRecord: async (user, record) => {\r\n            const fbCustomer = await axios.post(`https://${firebaseProj}.firebaseio.com/${user.localId}/${tableName}.json?auth=${user.idToken}`, record);\r\n            return fbCustomer;\r\n        },\r\n        updateRecord: async (user, recordId, record) => {\r\n            await axios.put(`https://${firebaseProj}.firebaseio.com/${user.localId}/${tableName}/${recordId}.json?auth=${user.idToken}`, record);\r\n            return { ...record, id: recordId };\r\n        },\r\n        deleteRecord: async (user, recordId, record) => {\r\n            await axios.delete(`https://${firebaseProj}.firebaseio.com/${user.localId}/${tableName}/${recordId}.json?auth=${user.idToken}`);\r\n            return { ...record, id: recordId };\r\n        },\r\n        deleteTable: async (user) => {\r\n            await axios.delete(`https://${firebaseProj}.firebaseio.com/${user.localId}/${tableName}.json?auth=${user.idToken}`);\r\n        },\r\n        getRecord: async (user, recordId) => {\r\n            const fbCustomer = await axios.get(`https://${firebaseProj}.firebaseio.com/${user.localId}/${tableName}/${recordId}.json?auth=${user.idToken}`);\r\n            return fbCustomer;\r\n        },\r\n        getRecords: async (user, limit) => { // TODO: implement limit on number of records returned \r\n            const result = await axios.get(`https://${firebaseProj}.firebaseio.com/${user.localId}/${tableName}.json?auth=${user.idToken}`);\r\n            return result;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default firebaseService;\r\n","import axios from 'axios';\r\nconst apiKey = 'AIzaSyDO8jhD5kAOCtGONcvjmAnvdGwPjpR8GyY';\r\nconst authService = {\r\n    webApiKey: apiKey,\r\n    signIn: async function signInService(user) {\r\n\r\n        const fbuser = await axios.post(`https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${apiKey}`, { ...user, returnSecureToken: true });\r\n        return fbuser;\r\n    },\r\n    signUp: async function signUpService(user) {\r\n\r\n        const fbuser = await axios.post(`https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${apiKey}`, { ...user, returnSecureToken: true });\r\n        return fbuser;\r\n    }\r\n\r\n};\r\n\r\nexport default authService;","import React, { useState } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport authService from '../../services/authService';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { AlternateEmail, LockOutlined } from '@material-ui/icons';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { CardContent, CardActions } from '@material-ui/core';\r\n\r\n// TODO: https://github.com/mui-org/material-ui/blob/master/docs/src/pages/getting-started/templates/sign-in/SignIn.js\r\n// TODO: use formik https://www.youtube.com/watch?v=TxEVnaISj1w\r\nconst useStyles = makeStyles((theme) => ({\r\n    formContainer: {\r\n        display: 'flex',\r\n        height: '30vh',\r\n        width: '30%',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n        margin: '20px auto',\r\n    },\r\n    actionsContainer: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n    }\r\n}));\r\n\r\nconst SignIn = ({ onSignedIn }) => {\r\n    const [user, setUser] = useState({ email: \"\", password: \"\" });\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const handleEmailChange = ({ target }) => {\r\n        setUser(u => u = { ...u, email: target.value });\r\n    }\r\n\r\n    const handlePasswordChange = ({ target }) => {\r\n        setUser(u => u = { ...u, password: target.value });\r\n    }\r\n\r\n    const handleSignIn = async () => {\r\n        const fbuser = await authService.signIn(user);\r\n        history.push('/');\r\n        onSignedIn(fbuser.data);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Card className={classes.formContainer}>\r\n                <form>\r\n                    <CardContent>\r\n                        <Grid container spacing={1} alignItems=\"flex-end\">\r\n                            <Grid item>\r\n                                <AlternateEmail />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <TextField value={user.email} label=\"Email Address\" onChange={handleEmailChange} />\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        <Grid container spacing={1} alignItems=\"flex-end\">\r\n                            <Grid item>\r\n                                <LockOutlined />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <TextField value={user.password} type=\"password\" label=\"Password\" onChange={handlePasswordChange} />\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                    </CardContent>\r\n\r\n                    <CardActions className={classes.actionsContainer}>\r\n                        <Button color='secondary' onClick={() => setUser({ email: \"\", password: \"\" })}> Reset </Button>\r\n                        <Button variant=\"contained\" color='primary' onClick={handleSignIn}> Login </Button>\r\n                    </CardActions>\r\n                </form>\r\n            </Card>\r\n        </React.Fragment>\r\n\r\n    )\r\n}\r\n\r\nexport default SignIn;","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport { ErrorMessage } from 'formik';\r\n\r\nconst CoreField = ({ field, mode, onChange, onBlur, value }) => {\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {((['text', 'tel', 'email'].includes(field.type)) &&\r\n                <Grid item xs={4}>\r\n                    <TextField\r\n                        fullWidth\r\n                        type={field.type}\r\n                        name={field.name}\r\n                        label={field.label}\r\n                        autoFocus={field.autoFocus}\r\n                        disabled={mode === 2 || (field.isReadOnly)}\r\n                        onChange={onChange}\r\n                        onBlur={onBlur}\r\n                        value={value}\r\n                    />\r\n                    <ErrorMessage name={field.name} component=\"div\" />\r\n                </Grid>)}\r\n            {((['textarea'].includes(field.type)) &&\r\n                <Grid item xs={4}>\r\n                    <TextField\r\n                        fullWidth\r\n                        type={field.type}\r\n                        name={field.name}\r\n                        label={field.label}\r\n                        multiline\r\n                        rowsMax={4}\r\n                        autoFocus={field.autoFocus}\r\n                        disabled={mode === 2 || (field.isReadOnly)}\r\n                        onChange={onChange}\r\n                        onBlur={onBlur}\r\n                        value={value}\r\n                    />\r\n                    <ErrorMessage name={field.name} component=\"div\" />\r\n                </Grid>)}\r\n\r\n            {((['number'].includes(field.type)) &&\r\n                <Grid item xs={4}>\r\n                    <TextField\r\n                        type={field.type}\r\n                        name={field.name}\r\n                        label={field.label}\r\n                        autoFocus={field.autoFocus}\r\n                        disabled={mode === 2 || (field.isReadOnly)}\r\n                        onChange={onChange}\r\n                        onBlur={onBlur}\r\n                        value={value}\r\n                    />\r\n                    <ErrorMessage name={field.name} component=\"div\" />\r\n                </Grid>)}\r\n\r\n            {((['date'].includes(field.type)) &&\r\n                <Grid item xs={4}>\r\n                    <TextField\r\n                        type={field.type}\r\n                        name={field.name}\r\n                        label={field.label}\r\n                        autoFocus={field.autoFocus}\r\n                        disabled={mode === 2 || (field.isReadOnly)}\r\n                        onChange={onChange}\r\n                        onBlur={onBlur}\r\n                        value={value}\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                    />\r\n                    <ErrorMessage name={field.name} component=\"div\" />\r\n                </Grid>)}\r\n\r\n            {((['checkbox'].includes(field.type)) &&\r\n                <Grid item xs={4}>\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Switch\r\n                                checked={value}\r\n                                onChange={onChange}\r\n                                name={field.name}\r\n                                color=\"primary\"\r\n                                disabled={mode === 2 || (field.isReadOnly)}\r\n                            />\r\n                        }\r\n                        label={field.label}\r\n                    />\r\n                    <ErrorMessage name={field.name} component=\"div\" />\r\n                </Grid>)}\r\n        </React.Fragment>\r\n\r\n    )\r\n}\r\n\r\nexport default CoreField;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport firebaseService from '../../../services/firebaseService';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Formik } from 'formik';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\r\nimport SaveOutlinedIcon from '@material-ui/icons/SaveOutlined';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CancelOutlinedIcon from '@material-ui/icons/CancelOutlined';\r\nimport AddOutlinedIcon from '@material-ui/icons/AddOutlined';\r\nimport CoreField from './CoreField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formContainer: {\r\n        width: '90%',\r\n        margin: '25px auto',\r\n    },\r\n    cardTitle: {\r\n        textAlign: 'left',\r\n        fontSize: '2em',\r\n        backgroundColor: 'silver',\r\n    },\r\n    actionsContainer: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n        alignItems: 'center',\r\n        padding: '10px',\r\n        backgroundColor: 'silver',\r\n    },\r\n    actionsContainerTopMain: {\r\n        width: '50%',\r\n        padding: '10px',\r\n    },\r\n    actionsContainerTopButtons: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n    }\r\n}));\r\n\r\nconst CoreForm = ({ fbUser, mode, definition, initialInputRecord, onAdded, onUpdated, onDeleted, onCancelled }) => {\r\n\r\n    const classes = useStyles();\r\n    const svc = firebaseService(definition.name.toLowerCase());\r\n    const title = (mode) => {\r\n        switch (mode) {\r\n            case 1:\r\n                return 'Create ' + definition.name;\r\n            case 2:\r\n                return 'Delete ' + definition.name;\r\n            case 3:\r\n                return 'Update ' + definition.name;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <Formik\r\n                initialValues={initialInputRecord}\r\n                onSubmit={async (values, { setSubmitting }) => {\r\n                    const newRecord = {};\r\n                    definition.fields.forEach(f => newRecord[f.name] = values[f.name]);\r\n                    if (mode === 1) {\r\n                        const result = await svc.createRecord(fbUser, newRecord);\r\n                        onAdded({ ...values, firebaseId: result.data.name });\r\n                    } else if (mode === 2) {\r\n                        await svc.deleteRecord(fbUser, initialInputRecord.firebaseId, newRecord);\r\n                        onDeleted(values);\r\n                    } else if (mode === 3) {\r\n                        await svc.updateRecord(fbUser, initialInputRecord.firebaseId, newRecord);\r\n                        onUpdated(values);\r\n                    }\r\n                    setSubmitting(false);\r\n                }}\r\n            >\r\n                {({\r\n                    values,\r\n                    errors,\r\n                    touched,\r\n                    handleChange,\r\n                    handleBlur,\r\n                    handleSubmit,\r\n                    isSubmitting,\r\n                    /* and other goodies */\r\n                }) => (\r\n                        <form onSubmit={handleSubmit} >\r\n                            <Card raised className={classes.formContainer}>\r\n                                <CardHeader className={classes.cardTitle}\r\n                                    title={title(mode)}\r\n                                    subheader={`${values.firebaseId}`}\r\n                                    action={\r\n                                        <CancelOutlinedIcon color='secondary' onClick={onCancelled} />\r\n                                    }\r\n                                />\r\n                                <CardContent>\r\n                                    <Grid container  spacing={3}>\r\n                                        {definition.fields.map(f => <CoreField key={f.name} field={f} value={values[f.name]} mode={mode} onChange={handleChange} onBlur={handleBlur}/>)}\r\n                                    </Grid>\r\n\r\n                                </CardContent>\r\n                                <CardActions className={classes.actionsContainer}>\r\n\r\n                                    <Button type=\"button\" disabled={isSubmitting} variant=\"contained\" color='secondary' onClick={onCancelled} startIcon={<CancelOutlinedIcon />}>Cancel</Button>\r\n                                    {(mode === 1) && <Button type=\"submit\" disabled={isSubmitting} variant=\"contained\" color='primary' startIcon={<AddOutlinedIcon />}>Create</Button>}\r\n                                    {(mode === 2) && <Button type=\"submit\" disabled={isSubmitting} variant=\"contained\" color='secondary' startIcon={<DeleteOutlinedIcon />}>Delete</Button>}\r\n                                    {(mode === 3) && <Button type=\"submit\" disabled={isSubmitting} variant=\"contained\" color='primary' startIcon={<SaveOutlinedIcon />}>Save</Button>}\r\n                                </CardActions>\r\n                            </Card>\r\n                        </form>\r\n                    )}\r\n\r\n            </Formik>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default CoreForm;","import React from 'react'\r\nimport { forwardRef } from 'react';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport { Button, TextField } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MaterialTable from 'material-table';\r\nimport _ from 'lodash';\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  toolbarContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: '10px',\r\n  },\r\n  importButton: {\r\n    alignSelf: 'stretch',\r\n    textTransform: 'none',\r\n  },\r\n  importUrlField: {\r\n    width: '30%',\r\n  },\r\n  importChip: {\r\n    width: '30%',\r\n    backgroundColor: 'Teal',\r\n    boxShadow: '2px 2px silver',\r\n    padding: '10px',\r\n    color: 'white',\r\n    borderRadius: '16px',\r\n    fontSize: '0.8em',\r\n    textAlign: 'center'\r\n  }\r\n}));\r\n\r\nconst CoreList = ({ definition, fbUser, records, onAdd, onDelete, onUpdate, onImport, importMessage, onImportUrlChange }) => {\r\n  const summaryColumns = _.filter(definition.fields, (f)=> !!f.summary);\r\n  const sortedSummaryColumns = _.orderBy(summaryColumns, ['summary', ['asc']]).map(r => { return { title: r.label, field: r.name } });\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {(importMessage || fbUser.enableImport) &&\r\n        <div className={classes.toolbarContainer}>\r\n          <TextField className={classes.importUrlField} onChange={onImportUrlChange} label=\"Import url\"></TextField>\r\n          <div className={classes.importChip} > {importMessage} </div>\r\n          <Button onClick={onImport} color='secondary' className={classes.importButton}>Import</Button>\r\n        </div>\r\n      }\r\n      <MaterialTable icons={tableIcons}\r\n        title={definition.pluralName}\r\n        columns={sortedSummaryColumns}\r\n        data={records}\r\n        actions={[\r\n          {\r\n            icon: tableIcons.Add,\r\n            tooltip: 'Add ' + definition.name,\r\n            isFreeAction: true,\r\n            onClick: (event) => onAdd()\r\n          },\r\n          {\r\n            icon: tableIcons.Edit,\r\n            tooltip: 'Edit ' + definition.name,\r\n            onClick: (event, rowData) => {\r\n              onUpdate(rowData);\r\n            }\r\n          },\r\n          {\r\n            icon: tableIcons.Delete,\r\n            tooltip: 'Delete ' + definition.name,\r\n            iconProps: {\r\n              style: 'color: \"red\"',\r\n            },\r\n            onClick: (event, rowData) => {\r\n              onDelete(rowData);\r\n            }\r\n          }\r\n        ]}\r\n        options={{\r\n          actionsColumnIndex: -1,\r\n        }}\r\n        localization={{\r\n          body: {\r\n            emptyDataSourceMessage: `No ${definition.name}s to display, import or add ${definition.name}s by clicking the plus sign above.`,\r\n          },\r\n        }}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default CoreList;","import React, { useState, useEffect } from 'react';\r\nimport CoreForm from './components/CoreForm';\r\nimport CoreList from './components/CoreList';\r\nimport pluralize from 'pluralize'\r\nimport firebaseService from '../../services/firebaseService';\r\nimport _ from 'lodash';\r\n\r\nconst RecordsManager = ({ fbUser, definition }) => {\r\n    const [importMessage, setImportMessage] = useState('');\r\n    const [importUrl, setImportUrl] = useState('');\r\n    const [records, setRecords] = useState([]);\r\n    definition = normalizeDefinition(definition);\r\n    const initialRecords = {};\r\n    definition.fields.forEach(element => {\r\n        initialRecords[element.name] = element.defaultValue;\r\n    });\r\n    const [selectedRecord, setSelectedRecord] = useState(initialRecords);\r\n    const [mode, setMode] = useState(0);\r\n    const svc = firebaseService(definition.name.toLowerCase());\r\n    useEffect(() => {\r\n        async function getRecords() {\r\n            if (records.length === 0) {\r\n                const result = await svc.getRecords(fbUser);\r\n                if (result && result.data) {\r\n                    const objectKeys = Object.keys(result.data);\r\n                    const mappedRecords = objectKeys.map(k => { return { ...result.data[k], firebaseId: k } });\r\n                    setRecords(mappedRecords);\r\n                    setMode(0);\r\n                } else {\r\n                    setImportMessage('Enter service Url, then press Import to import up to 5000 records');\r\n                }\r\n            }\r\n        }\r\n        getRecords();\r\n    }, [fbUser, svc, definition, records]);\r\n\r\n    const handleOnAdded = (newRecord) => {\r\n        setRecords([...records, newRecord]);\r\n        setMode(0)\r\n    };\r\n    const handleOnUpdated = (updatedRecord) => {\r\n        const updatedRecords = records.map(c => c.firebaseId === updatedRecord.firebaseId ? updatedRecord : c);\r\n        setRecords(updatedRecords);\r\n        setMode(0)\r\n    };\r\n    const handleOnDeleted = (deletedRecord) => {\r\n        const remainingRecords = records.filter(x => x.firebaseId !== deletedRecord.firebaseId);\r\n        setRecords(remainingRecords);\r\n        setMode(0)\r\n    };\r\n    const handleOnCancelled = () => {\r\n        setMode(0)\r\n    };\r\n    const handleOnAdd = () => {\r\n        setSelectedRecord(initialRecords);\r\n        setMode(1);\r\n    };\r\n    const handleOnDelete = (deleteRecord) => {\r\n        setSelectedRecord(deleteRecord)\r\n        setMode(2);\r\n    };\r\n    const handleOnUpdate = (updateRecord) => {\r\n        setSelectedRecord(updateRecord)\r\n        setMode(3);\r\n    };\r\n    const handleOnImport = async () => {\r\n        try {\r\n            if (!importUrl) {\r\n                setImportMessage('Please enter import url...');\r\n                return;\r\n            }\r\n            const importRecords = await (await svc.importFrom(importUrl)).data;\r\n            setImportMessage(`Found ${importRecords.length} ${definition.name} records. Importing...`);\r\n            importRecords.forEach(r => {\r\n                setTimeout(() => {\r\n                    const newImport = {};\r\n                    const importedKeys = Object.keys(r);\r\n                    importedKeys.forEach(ik => {\r\n                        const normalizedKey = ik.replace('_', '').toLowerCase();\r\n                        //Find this normalizedKey in the definition\r\n                        const matchingKey = _.find(definition.fields, (f) => f.name.toLowerCase() === normalizedKey);\r\n                        if (matchingKey && matchingKey.name) {\r\n                            if (matchingKey.type === 'date') {\r\n                                newImport[matchingKey.name] = (new Date(r[ik]).toISOString().substring(0,10));\r\n                            } else {\r\n                                newImport[matchingKey.name] = r[ik];\r\n                            }\r\n                        }\r\n                    })\r\n                    svc.createRecord(fbUser, newImport);\r\n                    setImportMessage(`Importing ${definition.name} record# ${newImport[definition.fields[0].name]}`)\r\n                    setRecords([...records, newImport]);\r\n                }, 2000)\r\n            });\r\n        } catch (err) {\r\n            setImportMessage(err.message);\r\n        }\r\n    };\r\n    const handleImportUrlChange = (event) => {\r\n        setImportUrl(event.target.value);\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                mode === 0 ? <CoreList definition={definition} fbUser={fbUser} records={records} onAdd={handleOnAdd} onDelete={handleOnDelete} onUpdate={handleOnUpdate} onImport={handleOnImport} importMessage={importMessage} onImportUrlChange={handleImportUrlChange}></CoreList> :\r\n                    <CoreForm mode={mode} definition={definition} initialInputRecord={selectedRecord} fbUser={fbUser} onAdded={handleOnAdded} onDeleted={handleOnDeleted} onUpdated={handleOnUpdated} onCancelled={handleOnCancelled}></CoreForm>\r\n            }\r\n\r\n        </React.Fragment >\r\n    )\r\n}\r\n\r\nfunction normalizeDefinition(definition) {\r\n    if (definition.processed) return definition;\r\n    definition.name = definition.name[0].toUpperCase() + definition.name.toLowerCase().substring(1);\r\n    definition.pluralName = pluralize(definition.name);\r\n    if (definition.sqlFields) {\r\n        if (!definition.fields) definition.fields = [];\r\n        const fields = definition.sqlFields.split('\\n');\r\n        fields.forEach(sf => {\r\n            const fieldParts = sf.replace(/ /g, '').split('\\t');\r\n            const name = fieldParts[0][0].toLowerCase() + fieldParts[0].substring(1);\r\n            const label = fieldParts[0];\r\n            let type = '';\r\n            if (fieldParts[1].includes('char')) {\r\n                type = 'text';\r\n            } else if (fieldParts[1].includes('bit')) {\r\n                type = 'checkbox';\r\n            } else if (fieldParts[1].includes('datetime')) {\r\n                type = 'date';\r\n            } else if (fieldParts[1].includes('int')) {\r\n                type = 'number';\r\n            } else if (fieldParts[1].includes('money')) {\r\n                type = 'number';\r\n            } else if (fieldParts[1].includes('decimal')) {\r\n                type = 'number';\r\n            }\r\n\r\n            const existingDefinitionRecord = _.find(definition.fields, (f) => f.name === fieldParts[0]);\r\n            if (existingDefinitionRecord) {\r\n                existingDefinitionRecord.label = label;\r\n                existingDefinitionRecord.type = type;\r\n                existingDefinitionRecord.name = name;\r\n            } else {\r\n                definition.fields.push({\r\n                    name,\r\n                    label,\r\n                    type\r\n                })\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    definition.fields = definition.fields.map(f => {\r\n        const label = (f.label || (f.name[0].toUpperCase() + f.name.substring(1)));\r\n        const type = (f.type || 'text');\r\n        const summary = f.summary || 0;\r\n        const defaultValue = f.defaultValue || '';\r\n        const readonly = f.readonly || false;\r\n        return {\r\n            ...f,\r\n            label,\r\n            type,\r\n            summary,\r\n            readonly,\r\n            defaultValue,\r\n        };\r\n    });\r\n\r\n    if (!definition.fields.some(s => s.summary)) {\r\n        definition.fields[0].summary = 1;\r\n    }\r\n    if (!definition.fields.some(s => s.autofocus)) {\r\n        definition.fields[0].autofocus = true;\r\n    }\r\n    definition.processed = true;\r\n    return definition;\r\n}\r\n\r\nexport default RecordsManager;","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    links: {\r\n        flexGrow: 1,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-around',\r\n    },\r\n    link: {\r\n        color: 'white',\r\n        textDecoration: 'none'\r\n    }\r\n}));\r\n\r\nconst AppHeader = ({ fbUser, onSignout }) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <AppBar position=\"static\">\r\n            <Toolbar>\r\n                <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\r\n                    <MenuIcon />\r\n                </IconButton>\r\n                <div className={classes.links}>\r\n                    {(fbUser && fbUser.idToken) && <Link to=\"/yachts\" className={classes.link}><Typography variant=\"button\">Yachts</Typography></Link>}\r\n                </div>\r\n                {\r\n                    (!fbUser || !fbUser.idToken) && <Link to=\"/signin\" className={classes.link}><Typography variant=\"button\">Login</Typography></Link>\r\n                }\r\n                {\r\n                    (fbUser && fbUser.idToken) && <Button className={classes.link} onClick={onSignout}><Typography variant=\"button\">Logout</Typography></Button>\r\n                }\r\n\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default AppHeader;","import React from 'react';\r\nimport { Container, Paper, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport authService from '../../services/authService'\r\nimport firebaseService  from '../../services/firebaseService'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    mainContainer: {\r\n        width: '80%',\r\n        height: '50vh',\r\n        margin: '30px auto',\r\n        display: 'flex',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n    },\r\n    message: {\r\n        width: '100%',\r\n        height: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n    }\r\n\r\n}));\r\n\r\nconst AppHome = ({ fbUser }) => {\r\n    const classes = useStyles();\r\n    const fbSrvc = firebaseService();\r\n    return (\r\n        <Container className={classes.mainContainer}>\r\n            <Paper elevation={5} className={classes.message}>\r\n                {\r\n                    (!fbUser.idToken) && <Typography>Welcome to Keepy! Web API Key {authService.webApiKey}, ProjId: {fbSrvc.projId}</Typography>\r\n                }\r\n                {\r\n                    (fbUser.idToken) && <Typography color='primary'>{`Welcome, ${fbUser.localId} [aka: ${fbUser.email}]`}</Typography>\r\n                }\r\n            </Paper>\r\n        </Container>\r\n    )\r\n};\r\n\r\nexport default AppHome;","const definition = {\r\n  name: 'yAcht',\r\n  fields: [\r\n    { name: 'newname', label: 'New name' , summary: 1 },\r\n    { name: 'oldname', label: 'Old name', summary: 2 },\r\n    { name: 'builder', label: 'Build', summary: 3 },\r\n    { name: 'hull', label: 'HIN #',  summary: 4 },\r\n    { name: 'cin', label: 'CIN #'},\r\n    { name: 'sellingbroker', label: 'Selling broker' },\r\n    { name: 'brokeragehouse', label: 'Brokerage house' },\r\n    { name: 'length'},\r\n    { name: 'beam' },\r\n    { name: 'depth' },\r\n    { name: 'newreg', label: 'New Registration' },\r\n    { name: 'dinghyreg', label: 'Old Registration' },\r\n    { name: 'flag' },\r\n    { name: 'hailingport', label: 'Hailing Port' },\r\n    { name: 'oldreg', label: 'Tender Make' },\r\n    { name: 'tender' , label: 'Tender Registration'},\r\n    { name: 'hin' , label: 'Tender HIN #'},\r\n    { name: 'owner', summary: 5 },\r\n    { name: 'corp', label: 'Corp/LLC' },\r\n    { name: 'documentation', type : 'textarea' , label: 'Doc Address'},\r\n    { name: 'mailing', label: 'Mail Address' },\r\n    { name: 'email'},\r\n    { name: 'phone', type: 'tel', summary: 6 },\r\n    { name: 'lienholder', label: 'Lien Holder' },\r\n    { name: 'lien' , label: 'Lien Amount'},\r\n    { name: 'fileno', label: 'File No' },\r\n    { name: 'storage' },\r\n    { name: 'id', type: 'number' },\r\n    { name: 'notes', type: 'textarea' },\r\n  ]\r\n}\r\n\r\n\r\nexport default definition;","import React from 'react';\r\nimport definition from './definition';\r\nimport RecordsManager from '../RecordsManager/RecordsManager';\r\n\r\nconst YachtsManager = ({fbUser}) => {\r\n    return (\r\n        <RecordsManager fbUser={fbUser} definition={definition} />\r\n    )\r\n\r\n}\r\n\r\nexport default YachtsManager;","import React from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport firebaseService from '../../services/firebaseService';\r\n\r\nconst Admin = ({ fbUser, onEnableImport }) => {\r\n\r\n    const svc = firebaseService('company');\r\n    const handleOnDeleteCustomers = () => {\r\n        svc.deleteTable(fbUser)\r\n    }\r\n\r\n    const handleOnEnableImport = ()=> {\r\n        onEnableImport();\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <Button color='primary' onClick={handleOnDeleteCustomers}>\r\n                Delete Companies\r\n            </Button>\r\n            <Button color='primary' onClick={handleOnEnableImport}>\r\n                Enable Import\r\n            </Button>\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Admin;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst PublicRoute = ({component: Component, fbUser, restricted, ...rest}) => {\r\n    return (\r\n        <Route {...rest} render={props => (\r\n            fbUser && fbUser.idToekn && restricted ?\r\n                <Redirect to=\"/customers\" />\r\n            : <Component {...props} />\r\n        )} />\r\n    );\r\n};\r\n\r\nexport default PublicRoute;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({component: Component, fbUser, ...rest}) => {\r\n    return (\r\n\r\n        <Route {...rest} render={props => (\r\n            fbUser && fbUser.idToken ?\r\n                <Component {...props} />\r\n            : <Redirect to=\"/signin\" />\r\n        )} />\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;","import React, { useState } from 'react';\r\n// import SignUp from './features/auth/SignUp';\r\nimport SignIn from './features/auth/SignIn';\r\nimport CustomersManager from './features/Customers/CustomersManager';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport AppHeader from './features/AppHeader/AppHeader';\r\nimport ContactsManager from './features/Contacts/ContactsManager';\r\nimport AppHome  from './features/AppHome/AppHome';\r\nimport YachtsManager from './features/YachtsManager/YactsManager';\r\nimport Admin from './features/Admin/Admin'\r\nimport PublicRoute from './features/auth/PublicRoute';\r\nimport PrivateRoute from './features/auth/PrivateRoute';\r\n\r\nfunction App() {\r\n  const [appState, setAppState] = useState({ User: {} });\r\n  const handleOnSignedIn = (fbUser) => {\r\n    if (fbUser) {\r\n      setAppState(s => s = { ...appState, User: fbUser });\r\n    }\r\n  }\r\n  const handleOnSignedout = (fbUser) => {\r\n      setAppState({ User: {} });\r\n  }\r\n\r\n  const handleOnEnableImport = ()=> {\r\n    const newState = {...appState};\r\n    newState.User.enableImport = true;\r\n    setAppState(newState);\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <AppHeader fbUser={appState.User} onSignout={handleOnSignedout}></AppHeader>\r\n      <PublicRoute exact path=\"/\" component={() => <AppHome fbUser={appState.User} />} fbUser={appState.User}></PublicRoute>\r\n      <PublicRoute restricted={true} exact path=\"/signin\" component={() => <SignIn onSignedIn={handleOnSignedIn} />} fbUser={appState.User}></PublicRoute>\r\n      <PrivateRoute exact path=\"/yachts\" component={() => <YachtsManager fbUser={appState.User} />} fbUser={appState.User}></PrivateRoute>\r\n      <PrivateRoute exact path=\"/admin\" component={() => <Admin fbUser={appState.User} onEnableImport={handleOnEnableImport} />} fbUser={appState.User}></PrivateRoute>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
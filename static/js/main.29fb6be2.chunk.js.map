{"version":3,"sources":["services/firebaseService.js","services/authService.js","features/auth/SignIn.js","features/AppHeader/AppHeader.js","features/AppHome/AppHome.js","features/YachtsManager/definition.js","features/RecordsManager/components/CoreField.js","features/RecordsManager/components/CoreForm.js","features/RecordsManager/components/CoreList.js","features/RecordsManager/RecordsManager.js","features/YachtsManager/YactsManager.js","features/Admin/Admin.js","features/auth/PublicRoute.js","features/auth/PrivateRoute.js","App.js","serviceWorker.js","index.js"],"names":["tableName","apiKey","authService","webApiKey","signIn","user","a","axios","post","returnSecureToken","fbuser","signUp","useStyles","makeStyles","theme","formContainer","display","height","width","flexDirection","justifyContent","alignItems","margin","actionsContainer","SignIn","onSignedIn","useState","email","password","setUser","classes","history","useHistory","handleSignIn","push","data","Fragment","Card","className","CardContent","Grid","container","spacing","item","AlternateEmail","TextField","value","label","onChange","target","u","LockOutlined","type","CardActions","Button","color","onClick","variant","links","flexGrow","link","textDecoration","AppHeader","fbUser","onSignout","AppBar","position","Toolbar","IconButton","edge","aria-label","idToken","to","Typography","firebaseService","fbTable","projId","importFrom","url","get","importedRecords","createRecord","record","localId","fbCustomer","updateRecord","recordId","put","id","deleteRecord","delete","deleteTable","getRecord","getRecords","limit","result","mainContainer","message","AppHome","fbSrvc","Container","Paper","elevation","definition","name","fields","summary","lable","CoreField","field","mode","onBlur","includes","xs","fullWidth","autoFocus","disabled","isReadOnly","component","multiline","rowsMax","InputLabelProps","shrink","FormControlLabel","control","Switch","checked","cardTitle","textAlign","fontSize","backgroundColor","padding","actionsContainerTopMain","actionsContainerTopButtons","CoreForm","initialInputRecord","onAdded","onUpdated","onDeleted","onCancelled","svc","toLowerCase","title","initialValues","onSubmit","values","setSubmitting","newRecord","forEach","f","firebaseId","handleChange","errors","touched","handleBlur","handleSubmit","isSubmitting","raised","CardHeader","subheader","action","map","key","startIcon","tableIcons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","toolbarContainer","importButton","alignSelf","textTransform","importUrlField","importChip","boxShadow","borderRadius","isTermnInRow","term","rowData","Object","join","replace","CoreList","records","onAdd","onDelete","onUpdate","onImport","importMessage","onImportUrlChange","summaryColumns","_","filter","sortedSummaryColumns","orderBy","r","customFilterAndSearch","enableImport","icons","pluralName","columns","actions","icon","tooltip","isFreeAction","event","iconProps","style","options","actionsColumnIndex","localization","body","emptyDataSourceMessage","RecordsManager","setImportMessage","importUrl","setImportUrl","setRecords","processed","toUpperCase","substring","pluralize","sqlFields","split","sf","fieldParts","existingDefinitionRecord","find","defaultValue","readonly","some","s","autofocus","normalizeDefinition","initialRecords","element","selectedRecord","setSelectedRecord","setMode","useEffect","length","objectKeys","keys","mappedRecords","k","handleOnImport","importRecords","setTimeout","newImport","ik","normalizedKey","matchingKey","Date","toISOString","deletedRecord","remainingRecords","x","updatedRecord","updatedRecords","c","YachtsManager","Admin","onEnableImport","PublicRoute","Component","restricted","rest","render","idToekn","PrivateRoute","App","User","appState","setAppState","handleOnSignedIn","handleOnEnableImport","newState","exact","path","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.29fb6be2.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst firebaseProj = 'yachts-1baaa';\r\nlet tableName;\r\n\r\nconst firebaseService = (fbTable) => {\r\n    tableName = fbTable;\r\n    return {\r\n        projId: firebaseProj,\r\n        importFrom: async (url) => {\r\n            const importedRecords = await axios.get(url);\r\n            return importedRecords;\r\n        },\r\n        createRecord: async (user, record) => {\r\n            const fbCustomer = await axios.post(`https://${firebaseProj}.firebaseio.com/${user.localId}/${tableName}.json?auth=${user.idToken}`, record);\r\n            return fbCustomer;\r\n        },\r\n        updateRecord: async (user, recordId, record) => {\r\n            await axios.put(`https://${firebaseProj}.firebaseio.com/${user.localId}/${tableName}/${recordId}.json?auth=${user.idToken}`, record);\r\n            return { ...record, id: recordId };\r\n        },\r\n        deleteRecord: async (user, recordId, record) => {\r\n            await axios.delete(`https://${firebaseProj}.firebaseio.com/${user.localId}/${tableName}/${recordId}.json?auth=${user.idToken}`);\r\n            return { ...record, id: recordId };\r\n        },\r\n        deleteTable: async (user) => {\r\n            await axios.delete(`https://${firebaseProj}.firebaseio.com/${user.localId}/${tableName}.json?auth=${user.idToken}`);\r\n        },\r\n        getRecord: async (user, recordId) => {\r\n            const fbCustomer = await axios.get(`https://${firebaseProj}.firebaseio.com/${user.localId}/${tableName}/${recordId}.json?auth=${user.idToken}`);\r\n            return fbCustomer;\r\n        },\r\n        getRecords: async (user, limit) => { // TODO: implement limit on number of records returned \r\n            const result = await axios.get(`https://${firebaseProj}.firebaseio.com/${user.localId}/${tableName}.json?auth=${user.idToken}`);\r\n            return result;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default firebaseService;\r\n","import axios from 'axios';\r\nconst apiKey = 'AIzaSyDO8jhD5kAOCtGONcvjmAnvdGwPjpR8GyY';\r\nconst authService = {\r\n    webApiKey: apiKey,\r\n    signIn: async function signInService(user) {\r\n\r\n        const fbuser = await axios.post(`https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${apiKey}`, { ...user, returnSecureToken: true });\r\n        return fbuser;\r\n    },\r\n    signUp: async function signUpService(user) {\r\n\r\n        const fbuser = await axios.post(`https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${apiKey}`, { ...user, returnSecureToken: true });\r\n        return fbuser;\r\n    }\r\n\r\n};\r\n\r\nexport default authService;","import React, { useState } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport authService from '../../services/authService';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { AlternateEmail, LockOutlined } from '@material-ui/icons';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { CardContent, CardActions } from '@material-ui/core';\r\n\r\n// TODO: https://github.com/mui-org/material-ui/blob/master/docs/src/pages/getting-started/templates/sign-in/SignIn.js\r\n// TODO: use formik https://www.youtube.com/watch?v=TxEVnaISj1w\r\nconst useStyles = makeStyles((theme) => ({\r\n    formContainer: {\r\n        display: 'flex',\r\n        height: '30vh',\r\n        width: '30%',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n        margin: '20px auto',\r\n    },\r\n    actionsContainer: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n    }\r\n}));\r\n\r\nconst SignIn = ({ onSignedIn }) => {\r\n    const [user, setUser] = useState({ email: \"\", password: \"\" });\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const handleEmailChange = ({ target }) => {\r\n        setUser(u => u = { ...u, email: target.value });\r\n    }\r\n\r\n    const handlePasswordChange = ({ target }) => {\r\n        setUser(u => u = { ...u, password: target.value });\r\n    }\r\n\r\n    const handleSignIn = async () => {\r\n        const fbuser = await authService.signIn(user);\r\n        history.push('/');\r\n        onSignedIn(fbuser.data);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Card className={classes.formContainer}>\r\n                <form>\r\n                    <CardContent>\r\n                        <Grid container spacing={1} alignItems=\"flex-end\">\r\n                            <Grid item>\r\n                                <AlternateEmail />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <TextField value={user.email} label=\"Email Address\" onChange={handleEmailChange} />\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        <Grid container spacing={1} alignItems=\"flex-end\">\r\n                            <Grid item>\r\n                                <LockOutlined />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <TextField value={user.password} type=\"password\" label=\"Password\" onChange={handlePasswordChange} />\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                    </CardContent>\r\n\r\n                    <CardActions className={classes.actionsContainer}>\r\n                        <Button color='secondary' onClick={() => setUser({ email: \"\", password: \"\" })}> Reset </Button>\r\n                        <Button variant=\"contained\" color='primary' onClick={handleSignIn}> Login </Button>\r\n                    </CardActions>\r\n                </form>\r\n            </Card>\r\n        </React.Fragment>\r\n\r\n    )\r\n}\r\n\r\nexport default SignIn;","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    links: {\r\n        flexGrow: 1,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-around',\r\n    },\r\n    link: {\r\n        color: 'white',\r\n        textDecoration: 'none'\r\n    }\r\n}));\r\n\r\nconst AppHeader = ({ fbUser, onSignout }) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <AppBar position=\"static\">\r\n            <Toolbar>\r\n                <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\r\n                    <MenuIcon />\r\n                </IconButton>\r\n                <div className={classes.links}>\r\n                    {(fbUser && fbUser.idToken) && <Link to=\"/yachts\" className={classes.link}><Typography variant=\"button\">Yachts</Typography></Link>}\r\n                </div>\r\n                {\r\n                    (!fbUser || !fbUser.idToken) && <Link to=\"/signin\" className={classes.link}><Typography variant=\"button\">Login</Typography></Link>\r\n                }\r\n                {\r\n                    (fbUser && fbUser.idToken) && <Button className={classes.link} onClick={onSignout}><Typography variant=\"button\">Logout</Typography></Button>\r\n                }\r\n\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default AppHeader;","import React from 'react';\r\nimport { Container, Paper, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport authService from '../../services/authService'\r\nimport firebaseService  from '../../services/firebaseService'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    mainContainer: {\r\n        width: '80%',\r\n        height: '50vh',\r\n        margin: '30px auto',\r\n        display: 'flex',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n    },\r\n    message: {\r\n        width: '100%',\r\n        height: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n    }\r\n\r\n}));\r\n\r\nconst AppHome = ({ fbUser }) => {\r\n    const classes = useStyles();\r\n    const fbSrvc = firebaseService();\r\n    return (\r\n        <Container className={classes.mainContainer}>\r\n            <Paper elevation={5} className={classes.message}>\r\n                {\r\n                    (!fbUser.idToken) && <Typography>Welcome to Keepy! Web API Key {authService.webApiKey}, ProjId: {fbSrvc.projId}</Typography>\r\n                }\r\n                {\r\n                    (fbUser.idToken) && <Typography color='primary'>{`Welcome, ${fbUser.localId} [aka: ${fbUser.email}]`}</Typography>\r\n                }\r\n            </Paper>\r\n        </Container>\r\n    )\r\n};\r\n\r\nexport default AppHome;","const definition = {\r\n  name: 'yAcht',\r\n  fields: [\r\n    { name: 'newname', label: 'New Name', summary: 1 },\r\n    { name: 'oldname', label: 'Old Name', summary: 2 },\r\n    { name: 'builder', summary: 3 },\r\n    { name: 'hull', lable: 'Hull number', summary: 4 },\r\n    { name: 'sellingbroker', label: 'Selling broker' , summary: 5},\r\n    { name: 'brokeragehouse', label: 'Brokerage house' , summary: 6},\r\n    { name: 'length', type: 'textarea' , summary: 7},\r\n    { name: 'beam' , summary: 8},\r\n    { name: 'depth' , summary: 9},\r\n    { name: 'newreg', label: 'New Registration' , summary: 10},\r\n    { name: 'dinghyreg', label: 'Dinghy Registration' , summary: 11},\r\n    { name: 'flag' },\r\n    { name: 'hailingport', label: 'Hailing Port' , summary: 12},\r\n    { name: 'oldreg', label: 'Old Registration' , summary: 13},\r\n    { name: 'tender' , summary: 14},\r\n    { name: 'hin', summary: 15 },\r\n    { name: 'owner', summary: 16 },\r\n    { name: 'corp' },\r\n    { name: 'documentation', type : 'textarea' , summary: 17},\r\n    { name: 'mailing' },\r\n    { name: 'email', type: 'textarea' , summary: 18},\r\n    { name: 'phone', type: 'tel' },\r\n    { name: 'lienholder', label: 'Lien Holder' , summary: 19},\r\n    { name: 'lien' , summary: 20},\r\n    { name: 'fileno', label: 'File No' , summary: 21},\r\n    { name: 'storage' , summary: 22},\r\n    { name: 'id', type: 'number' },\r\n    { name: 'notes', type: 'textarea' },\r\n  ]\r\n}\r\n\r\n\r\nexport default definition;","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport { ErrorMessage } from 'formik';\r\n\r\nconst CoreField = ({ field, mode, onChange, onBlur, value }) => {\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {((['text', 'tel', 'email'].includes(field.type)) &&\r\n                <Grid item xs={4}>\r\n                    <TextField\r\n                        fullWidth\r\n                        type={field.type}\r\n                        name={field.name}\r\n                        label={field.label}\r\n                        autoFocus={field.autoFocus}\r\n                        disabled={mode === 2 || (field.isReadOnly)}\r\n                        onChange={onChange}\r\n                        onBlur={onBlur}\r\n                        value={value}\r\n                    />\r\n                    <ErrorMessage name={field.name} component=\"div\" />\r\n                </Grid>)}\r\n            {((['textarea'].includes(field.type)) &&\r\n                <Grid item xs={4}>\r\n                    <TextField\r\n                        fullWidth\r\n                        type={field.type}\r\n                        name={field.name}\r\n                        label={field.label}\r\n                        multiline\r\n                        rowsMax={4}\r\n                        autoFocus={field.autoFocus}\r\n                        disabled={mode === 2 || (field.isReadOnly)}\r\n                        onChange={onChange}\r\n                        onBlur={onBlur}\r\n                        value={value}\r\n                    />\r\n                    <ErrorMessage name={field.name} component=\"div\" />\r\n                </Grid>)}\r\n\r\n            {((['number'].includes(field.type)) &&\r\n                <Grid item xs={4}>\r\n                    <TextField\r\n                        type={field.type}\r\n                        name={field.name}\r\n                        label={field.label}\r\n                        autoFocus={field.autoFocus}\r\n                        disabled={mode === 2 || (field.isReadOnly)}\r\n                        onChange={onChange}\r\n                        onBlur={onBlur}\r\n                        value={value}\r\n                    />\r\n                    <ErrorMessage name={field.name} component=\"div\" />\r\n                </Grid>)}\r\n\r\n            {((['date'].includes(field.type)) &&\r\n                <Grid item xs={4}>\r\n                    <TextField\r\n                        type={field.type}\r\n                        name={field.name}\r\n                        label={field.label}\r\n                        autoFocus={field.autoFocus}\r\n                        disabled={mode === 2 || (field.isReadOnly)}\r\n                        onChange={onChange}\r\n                        onBlur={onBlur}\r\n                        value={value}\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                    />\r\n                    <ErrorMessage name={field.name} component=\"div\" />\r\n                </Grid>)}\r\n\r\n            {((['checkbox'].includes(field.type)) &&\r\n                <Grid item xs={4}>\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Switch\r\n                                checked={value}\r\n                                onChange={onChange}\r\n                                name={field.name}\r\n                                color=\"primary\"\r\n                                disabled={mode === 2 || (field.isReadOnly)}\r\n                            />\r\n                        }\r\n                        label={field.label}\r\n                    />\r\n                    <ErrorMessage name={field.name} component=\"div\" />\r\n                </Grid>)}\r\n        </React.Fragment>\r\n\r\n    )\r\n}\r\n\r\nexport default CoreField;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport firebaseService from '../../../services/firebaseService';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Formik } from 'formik';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\r\nimport SaveOutlinedIcon from '@material-ui/icons/SaveOutlined';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CancelOutlinedIcon from '@material-ui/icons/CancelOutlined';\r\nimport AddOutlinedIcon from '@material-ui/icons/AddOutlined';\r\nimport CoreField from './CoreField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formContainer: {\r\n        width: '90%',\r\n        margin: '25px auto',\r\n    },\r\n    cardTitle: {\r\n        textAlign: 'left',\r\n        fontSize: '2em',\r\n        backgroundColor: 'silver',\r\n    },\r\n    actionsContainer: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n        alignItems: 'center',\r\n        padding: '10px',\r\n        backgroundColor: 'silver',\r\n    },\r\n    actionsContainerTopMain: {\r\n        width: '50%',\r\n        padding: '10px',\r\n    },\r\n    actionsContainerTopButtons: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n    }\r\n}));\r\n\r\nconst CoreForm = ({ fbUser, mode, definition, initialInputRecord, onAdded, onUpdated, onDeleted, onCancelled }) => {\r\n\r\n    const classes = useStyles();\r\n    const svc = firebaseService(definition.name.toLowerCase());\r\n    const title = (mode) => {\r\n        switch (mode) {\r\n            case 1:\r\n                return 'Create ' + definition.name;\r\n            case 2:\r\n                return 'Delete ' + definition.name;\r\n            case 3:\r\n                return 'Update ' + definition.name;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <Formik\r\n                initialValues={initialInputRecord}\r\n                onSubmit={async (values, { setSubmitting }) => {\r\n                    const newRecord = {};\r\n                    definition.fields.forEach(f => newRecord[f.name] = values[f.name]);\r\n                    if (mode === 1) {\r\n                        const result = await svc.createRecord(fbUser, newRecord);\r\n                        onAdded({ ...values, firebaseId: result.data.name });\r\n                    } else if (mode === 2) {\r\n                        await svc.deleteRecord(fbUser, initialInputRecord.firebaseId, newRecord);\r\n                        onDeleted(values);\r\n                    } else if (mode === 3) {\r\n                        await svc.updateRecord(fbUser, initialInputRecord.firebaseId, newRecord);\r\n                        onUpdated(values);\r\n                    }\r\n                    setSubmitting(false);\r\n                }}\r\n            >\r\n                {({\r\n                    values,\r\n                    errors,\r\n                    touched,\r\n                    handleChange,\r\n                    handleBlur,\r\n                    handleSubmit,\r\n                    isSubmitting,\r\n                    /* and other goodies */\r\n                }) => (\r\n                        <form onSubmit={handleSubmit} >\r\n                            <Card raised className={classes.formContainer}>\r\n                                <CardHeader className={classes.cardTitle}\r\n                                    title={title(mode)}\r\n                                    subheader={`${values.firebaseId}`}\r\n                                    action={\r\n                                        <CancelOutlinedIcon color='secondary' onClick={onCancelled} />\r\n                                    }\r\n                                />\r\n                                <CardContent>\r\n                                    <Grid container  spacing={3}>\r\n                                        {definition.fields.map(f => <CoreField key={f.name} field={f} value={values[f.name]} mode={mode} onChange={handleChange} onBlur={handleBlur}/>)}\r\n                                    </Grid>\r\n\r\n                                </CardContent>\r\n                                <CardActions className={classes.actionsContainer}>\r\n\r\n                                    <Button type=\"button\" disabled={isSubmitting} variant=\"contained\" color='secondary' onClick={onCancelled} startIcon={<CancelOutlinedIcon />}>Cancel</Button>\r\n                                    {(mode === 1) && <Button type=\"submit\" disabled={isSubmitting} variant=\"contained\" color='primary' startIcon={<AddOutlinedIcon />}>Create</Button>}\r\n                                    {(mode === 2) && <Button type=\"submit\" disabled={isSubmitting} variant=\"contained\" color='secondary' startIcon={<DeleteOutlinedIcon />}>Delete</Button>}\r\n                                    {(mode === 3) && <Button type=\"submit\" disabled={isSubmitting} variant=\"contained\" color='primary' startIcon={<SaveOutlinedIcon />}>Save</Button>}\r\n                                </CardActions>\r\n                            </Card>\r\n                        </form>\r\n                    )}\r\n\r\n            </Formik>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default CoreForm;","import React from 'react'\r\nimport { forwardRef } from 'react';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport { Button, TextField } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MaterialTable from 'material-table';\r\nimport _ from 'lodash';\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  toolbarContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: '10px',\r\n  },\r\n  importButton: {\r\n    alignSelf: 'stretch',\r\n    textTransform: 'none',\r\n  },\r\n  importUrlField: {\r\n    width: '30%',\r\n  },\r\n  importChip: {\r\n    width: '30%',\r\n    backgroundColor: 'Teal',\r\n    boxShadow: '2px 2px silver',\r\n    padding: '10px',\r\n    color: 'white',\r\n    borderRadius: '16px',\r\n    fontSize: '0.8em',\r\n    textAlign: 'center'\r\n  }\r\n}));\r\n\r\n\r\nconst isTermnInRow = (term, rowData) => {\r\n\r\n  return term && rowData && Object.values(rowData).join('').replace(/[\\n ,-]/g, '').toLowerCase().includes(term.toLowerCase());\r\n\r\n}\r\n\r\nconst CoreList = ({ definition, fbUser, records, onAdd, onDelete, onUpdate, onImport, importMessage, onImportUrlChange }) => {\r\n  const summaryColumns = _.filter(definition.fields, (f) => !!f.summary);\r\n  const sortedSummaryColumns = _.orderBy(summaryColumns, ['summary', ['asc']]).map(r => { return { title: r.label, field: r.name, customFilterAndSearch: (term, rowData) => isTermnInRow(term, rowData) } });\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n\r\n      <div>{isTermnInRow('', records[0])}</div>\r\n\r\n      {(importMessage || fbUser.enableImport) &&\r\n        <div className={classes.toolbarContainer}>\r\n          <TextField className={classes.importUrlField} onChange={onImportUrlChange} label=\"Import url\"></TextField>\r\n          <div className={classes.importChip} > {importMessage} </div>\r\n          <Button onClick={onImport} color='secondary' className={classes.importButton}>Import</Button>\r\n        </div>\r\n      }\r\n      <MaterialTable icons={tableIcons}\r\n        title={definition.pluralName}\r\n        columns={sortedSummaryColumns}\r\n        data={records}\r\n        actions={[\r\n          {\r\n            icon: tableIcons.Add,\r\n            tooltip: 'Add ' + definition.name,\r\n            isFreeAction: true,\r\n            onClick: (event) => onAdd()\r\n          },\r\n          {\r\n            icon: tableIcons.Edit,\r\n            tooltip: 'Edit ' + definition.name,\r\n            onClick: (event, rowData) => {\r\n              onUpdate(rowData);\r\n            }\r\n          },\r\n          {\r\n            icon: tableIcons.Delete,\r\n            tooltip: 'Delete ' + definition.name,\r\n            iconProps: {\r\n              style: 'color: \"red\"',\r\n            },\r\n            onClick: (event, rowData) => {\r\n              onDelete(rowData);\r\n            }\r\n          }\r\n        ]}\r\n        options={{\r\n          actionsColumnIndex: -1,\r\n        }}\r\n        localization={{\r\n          body: {\r\n            emptyDataSourceMessage: `No ${definition.name}s to display, import or add ${definition.name}s by clicking the plus sign above.`,\r\n          },\r\n        }}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default CoreList;","import React, { useState, useEffect } from 'react';\r\nimport CoreForm from './components/CoreForm';\r\nimport CoreList from './components/CoreList';\r\nimport pluralize from 'pluralize'\r\nimport firebaseService from '../../services/firebaseService';\r\nimport _ from 'lodash';\r\n\r\nconst RecordsManager = ({ fbUser, definition }) => {\r\n    const [importMessage, setImportMessage] = useState('');\r\n    const [importUrl, setImportUrl] = useState('');\r\n    const [records, setRecords] = useState([]);\r\n    definition = normalizeDefinition(definition);\r\n    const initialRecords = {};\r\n    definition.fields.forEach(element => {\r\n        initialRecords[element.name] = element.defaultValue;\r\n    });\r\n    const [selectedRecord, setSelectedRecord] = useState(initialRecords);\r\n    const [mode, setMode] = useState(0);\r\n    const svc = firebaseService(definition.name.toLowerCase());\r\n    useEffect(() => {\r\n        async function getRecords() {\r\n            if (records.length === 0) {\r\n                const result = await svc.getRecords(fbUser);\r\n                if (result && result.data) {\r\n                    const objectKeys = Object.keys(result.data);\r\n                    const mappedRecords = objectKeys.map(k => { return { ...result.data[k], firebaseId: k } });\r\n                    setRecords(mappedRecords);\r\n                    setMode(0);\r\n                } else {\r\n                    setImportMessage('Enter service Url, then press Import to import up to 5000 records');\r\n                }\r\n            }\r\n        }\r\n        getRecords();\r\n    }, [fbUser, svc, definition, records]);\r\n\r\n    const handleOnAdded = (newRecord) => {\r\n        setRecords([...records, newRecord]);\r\n        setMode(0)\r\n    };\r\n    const handleOnUpdated = (updatedRecord) => {\r\n        const updatedRecords = records.map(c => c.firebaseId === updatedRecord.firebaseId ? updatedRecord : c);\r\n        setRecords(updatedRecords);\r\n        setMode(0)\r\n    };\r\n    const handleOnDeleted = (deletedRecord) => {\r\n        const remainingRecords = records.filter(x => x.firebaseId !== deletedRecord.firebaseId);\r\n        setRecords(remainingRecords);\r\n        setMode(0)\r\n    };\r\n    const handleOnCancelled = () => {\r\n        setMode(0)\r\n    };\r\n    const handleOnAdd = () => {\r\n        setSelectedRecord(initialRecords);\r\n        setMode(1);\r\n    };\r\n    const handleOnDelete = (deleteRecord) => {\r\n        setSelectedRecord(deleteRecord)\r\n        setMode(2);\r\n    };\r\n    const handleOnUpdate = (updateRecord) => {\r\n        setSelectedRecord(updateRecord)\r\n        setMode(3);\r\n    };\r\n    const handleOnImport = async () => {\r\n        try {\r\n            if (!importUrl) {\r\n                setImportMessage('Please enter import url...');\r\n                return;\r\n            }\r\n            const importRecords = await (await svc.importFrom(importUrl)).data;\r\n            setImportMessage(`Found ${importRecords.length} ${definition.name} records. Importing...`);\r\n            importRecords.forEach(r => {\r\n                setTimeout(() => {\r\n                    const newImport = {};\r\n                    const importedKeys = Object.keys(r);\r\n                    importedKeys.forEach(ik => {\r\n                        const normalizedKey = ik.replace('_', '').toLowerCase();\r\n                        //Find this normalizedKey in the definition\r\n                        const matchingKey = _.find(definition.fields, (f) => f.name.toLowerCase() === normalizedKey);\r\n                        if (matchingKey && matchingKey.name) {\r\n                            if (matchingKey.type === 'date') {\r\n                                newImport[matchingKey.name] = (new Date(r[ik]).toISOString().substring(0,10));\r\n                            } else {\r\n                                newImport[matchingKey.name] = r[ik];\r\n                            }\r\n                        }\r\n                    })\r\n                    svc.createRecord(fbUser, newImport);\r\n                    setImportMessage(`Importing ${definition.name} record# ${newImport[definition.fields[0].name]}`)\r\n                    setRecords([...records, newImport]);\r\n                }, 2000)\r\n            });\r\n        } catch (err) {\r\n            setImportMessage(err.message);\r\n        }\r\n    };\r\n    const handleImportUrlChange = (event) => {\r\n        setImportUrl(event.target.value);\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                mode === 0 ? <CoreList definition={definition} fbUser={fbUser} records={records} onAdd={handleOnAdd} onDelete={handleOnDelete} onUpdate={handleOnUpdate} onImport={handleOnImport} importMessage={importMessage} onImportUrlChange={handleImportUrlChange}></CoreList> :\r\n                    <CoreForm mode={mode} definition={definition} initialInputRecord={selectedRecord} fbUser={fbUser} onAdded={handleOnAdded} onDeleted={handleOnDeleted} onUpdated={handleOnUpdated} onCancelled={handleOnCancelled}></CoreForm>\r\n            }\r\n\r\n        </React.Fragment >\r\n    )\r\n}\r\n\r\nfunction normalizeDefinition(definition) {\r\n    if (definition.processed) return definition;\r\n    definition.name = definition.name[0].toUpperCase() + definition.name.toLowerCase().substring(1);\r\n    definition.pluralName = pluralize(definition.name);\r\n    if (definition.sqlFields) {\r\n        if (!definition.fields) definition.fields = [];\r\n        const fields = definition.sqlFields.split('\\n');\r\n        fields.forEach(sf => {\r\n            const fieldParts = sf.replace(/ /g, '').split('\\t');\r\n            const name = fieldParts[0][0].toLowerCase() + fieldParts[0].substring(1);\r\n            const label = fieldParts[0];\r\n            let type = '';\r\n            if (fieldParts[1].includes('char')) {\r\n                type = 'text';\r\n            } else if (fieldParts[1].includes('bit')) {\r\n                type = 'checkbox';\r\n            } else if (fieldParts[1].includes('datetime')) {\r\n                type = 'date';\r\n            } else if (fieldParts[1].includes('int')) {\r\n                type = 'number';\r\n            } else if (fieldParts[1].includes('money')) {\r\n                type = 'number';\r\n            } else if (fieldParts[1].includes('decimal')) {\r\n                type = 'number';\r\n            }\r\n\r\n            const existingDefinitionRecord = _.find(definition.fields, (f) => f.name === fieldParts[0]);\r\n            if (existingDefinitionRecord) {\r\n                existingDefinitionRecord.label = label;\r\n                existingDefinitionRecord.type = type;\r\n                existingDefinitionRecord.name = name;\r\n            } else {\r\n                definition.fields.push({\r\n                    name,\r\n                    label,\r\n                    type\r\n                })\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    definition.fields = definition.fields.map(f => {\r\n        const label = (f.label || (f.name[0].toUpperCase() + f.name.substring(1)));\r\n        const type = (f.type || 'text');\r\n        const summary = f.summary || 0;\r\n        const defaultValue = f.defaultValue || '';\r\n        const readonly = f.readonly || false;\r\n        return {\r\n            ...f,\r\n            label,\r\n            type,\r\n            summary,\r\n            readonly,\r\n            defaultValue,\r\n        };\r\n    });\r\n\r\n    if (!definition.fields.some(s => s.summary)) {\r\n        definition.fields[0].summary = 1;\r\n    }\r\n    if (!definition.fields.some(s => s.autofocus)) {\r\n        definition.fields[0].autofocus = true;\r\n    }\r\n    definition.processed = true;\r\n    return definition;\r\n}\r\n\r\nexport default RecordsManager;","import React from 'react';\r\nimport definition from './definition';\r\nimport RecordsManager from '../RecordsManager/RecordsManager';\r\n\r\nconst YachtsManager = ({fbUser}) => {\r\n    return (\r\n        <RecordsManager fbUser={fbUser} definition={definition} />\r\n    )\r\n\r\n}\r\n\r\nexport default YachtsManager;","import React from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport firebaseService from '../../services/firebaseService';\r\n\r\nconst Admin = ({ fbUser, onEnableImport }) => {\r\n\r\n    const svc = firebaseService('company');\r\n    const handleOnDeleteCustomers = () => {\r\n        svc.deleteTable(fbUser)\r\n    }\r\n\r\n    const handleOnEnableImport = ()=> {\r\n        onEnableImport();\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <Button color='primary' onClick={handleOnDeleteCustomers}>\r\n                Delete Companies\r\n            </Button>\r\n            <Button color='primary' onClick={handleOnEnableImport}>\r\n                Enable Import\r\n            </Button>\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Admin;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst PublicRoute = ({component: Component, fbUser, restricted, ...rest}) => {\r\n    return (\r\n        <Route {...rest} render={props => (\r\n            fbUser && fbUser.idToekn && restricted ?\r\n                <Redirect to=\"/customers\" />\r\n            : <Component {...props} />\r\n        )} />\r\n    );\r\n};\r\n\r\nexport default PublicRoute;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({component: Component, fbUser, ...rest}) => {\r\n    return (\r\n\r\n        <Route {...rest} render={props => (\r\n            fbUser && fbUser.idToken ?\r\n                <Component {...props} />\r\n            : <Redirect to=\"/signin\" />\r\n        )} />\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;","import React, { useState } from 'react';\r\n// import SignUp from './features/auth/SignUp';\r\nimport SignIn from './features/auth/SignIn';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport AppHeader from './features/AppHeader/AppHeader';\r\nimport AppHome  from './features/AppHome/AppHome';\r\nimport YachtsManager from './features/YachtsManager/YactsManager';\r\nimport Admin from './features/Admin/Admin'\r\nimport PublicRoute from './features/auth/PublicRoute';\r\nimport PrivateRoute from './features/auth/PrivateRoute';\r\n\r\nfunction App() {\r\n  const [appState, setAppState] = useState({ User: {} });\r\n  const handleOnSignedIn = (fbUser) => {\r\n    if (fbUser) {\r\n      setAppState(s => s = { ...appState, User: fbUser });\r\n    }\r\n  }\r\n  const handleOnSignedout = (fbUser) => {\r\n      setAppState({ User: {} });\r\n  }\r\n\r\n  const handleOnEnableImport = ()=> {\r\n    const newState = {...appState};\r\n    newState.User.enableImport = true;\r\n    setAppState(newState);\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <AppHeader fbUser={appState.User} onSignout={handleOnSignedout}></AppHeader>\r\n      <PublicRoute exact path=\"/\" component={() => <AppHome fbUser={appState.User} />} fbUser={appState.User}></PublicRoute>\r\n      <PublicRoute restricted={true} exact path=\"/signin\" component={() => <SignIn onSignedIn={handleOnSignedIn} />} fbUser={appState.User}></PublicRoute>\r\n      <PrivateRoute exact path=\"/yachts\" component={() => <YachtsManager fbUser={appState.User} />} fbUser={appState.User}></PrivateRoute>\r\n      <PrivateRoute exact path=\"/admin\" component={() => <Admin fbUser={appState.User} onEnableImport={handleOnEnableImport} />} fbUser={appState.User}></PrivateRoute>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}